name: test-and-publish

on: [push]

jobs:
  test-and-publish:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x]
    services:
      localstack:
        image: localstack/localstack:latest
        env:
          SERVICES: s3
          DEFAULT_REGION: us-east-1
          FORCE_NONINTERACTIVE: 'true'
          HOSTNAME: localhost
          USE_SSL: false
          DEBUG: 1
        ports:
          - "4566-4599:4566-4599"
    steps:
    - uses: chrislennon/action-aws-cli@v1.1
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Install dependencies
      run: |
        aws --endpoint-url=http://localhost:4566 s3 mb s3://testing
        aws --endpoint-url=http://localhost:4566 s3 mb s3://testing2
        sudo apt-get install -y redis-server
        git config --global user.name "${{ secrets.NAME }}"
        git config --global user.email "${{ secrets.EMAIL }}"
        npm version patch
        npm install
        npm install faker puppeteer@2.1.1 @userdashboard/dashboard @userdashboard/organizations @userdashboard/storage-redis --no-save
        npm install -g mocha standard
        mkdir -p node_modules/@userdashboard/storage-s3
        cp *.js node_modules/@userdashboard/storage-s3
        cp -R src/ node_modules/@userdashboard/storage-s3/src/
        cp package.json package.json.old
        PACKAGE=`cat package.json`
        PACKAGE=${PACKAGE/\"deprecated\"\: false/\"dashboard\": \{ \"modules\"\: \[\"@userdashboard/organizations\"\] \}}
        echo $PACKAGE > package.json
        cat package.json
      env:
        AWS_SECRET_ACCESS_KEY: "using-mock-aws-s3"
        AWS_ACCESS_KEY_ID: "using-mock-aws-s3"
    - name: Lint (standard.js)
      run: standard src
    - name: Test as only storage
      run: mocha --file test-helper.js --bail --exit --full-trace --recursive --timeout 90000000 "./node_modules/@userdashboard/**/{,!(public)}/*.test.js" | tee tests.txt ; test ${PIPESTATUS[0]} -eq 0
      env:
        NODE_ENV: testing
        FAST_START: true
        DASHBOARD_SERVER: "http://localhost:9000"
        DOMAIN: "localhost"
        STORAGE: "@userdashboard/storage-s3"
        S3_ENDPOINT: "http://localhost:4566"
        S3_BUCKET_NAME: "testing"
        SECRET_ACCESS_KEY: "using-mock-aws-s3"
        ACCESS_KEY_ID: "using-mock-aws-s3"
        GENERATE_SITEMAP_TXT: false
        GENERATE_API_TXT: false
    - name: Test as primary storage
      run: mocha --file test-helper.js --bail --exit --full-trace --recursive --timeout 90000000 "./node_modules/@userdashboard/**/{,!(public)}/*.test.js"
      env:
        NODE_ENV: testing
        FAST_START: true
        DASHBOARD_SERVER: "http://localhost:9000"
        DOMAIN: "localhost"
        STORAGE: "@userdashboard/storage-s3"
        S3_ENDPOINT: "http://localhost:4566"
        S3_BUCKET_NAME: "testing"
        SECRET_ACCESS_KEY: "using-mock-aws-s3"
        ACCESS_KEY_ID: "using-mock-aws-s3"
        ORGANIZATIONS_STORAGE: "@userdashboard/storage-redis"
        ORGANIZATIONS_REDIS_URL: "redis://localhost:6379"
        GENERATE_SITEMAP_TXT: false
        GENERATE_API_TXT: false
    - name: Test as module storage
      run: mocha --file test-helper.js --bail --exit --full-trace --recursive --timeout 90000000 "./node_modules/@userdashboard/**/{,!(public)}/*.test.js"
      env:
        NODE_ENV: testing
        FAST_START: true
        DASHBOARD_SERVER: "http://localhost:9000"
        DOMAIN: "localhost"
        STORAGE: "@userdashboard/storage-redis"
        REDIS_URL: "redis://localhost:6379"
        ORGANIZATIONS_STORAGE: "@userdashboard/storage-s3"
        ORGANIZATIONS_S3_ENDPOINT: "http://localhost:4566"
        ORGANIZATIONS_S3_BUCKET_NAME: "testing"
        ORGANIZATIONS_SECRET_ACCESS_KEY: "using-mock-aws-s3"
        ORGANIZATIONS_ACCESS_KEY_ID: "using-mock-aws-s3"
        GENERATE_SITEMAP_TXT: false
        GENERATE_API_TXT: false
    - name: Test as primary and separately as module storage
      run: mocha --file test-helper.js --bail --exit --full-trace --recursive --timeout 90000000 "./node_modules/@userdashboard/**/{,!(public)}/*.test.js"
      env:
        NODE_ENV: testing
        FAST_START: true
        DASHBOARD_SERVER: "http://localhost:9000"
        DOMAIN: "localhost"
        STORAGE: "@userdashboard/storage-s3"
        S3_ENDPOINT: "http://localhost:4566"
        S3_BUCKET_NAME: "testing"
        SECRET_ACCESS_KEY: "using-mock-aws-s3"
        ACCESS_KEY_ID: "using-mock-aws-s3"
        ORGANIZATIONS_STORAGE: "@userdashboard/storage-s3"
        ORGANIZATIONS_S3_ENDPOINT: "http://localhost:4566"
        ORGANIZATIONS_S3_BUCKET_NAME: "testing2"
        ORGANIZATIONS_SECRET_ACCESS_KEY: "using-mock-aws-s3"
        ORGANIZATIONS_ACCESS_KEY_ID: "using-mock-aws-s3"
        GENERATE_SITEMAP_TXT: false
        GENERATE_API_TXT: false
    - name: Clean up
      run: |
        rm package.json
        mv package.json.old package.json
    - name: Publish to Github
      uses: stefanzweifel/git-auto-commit-action@v4.1.6
      with:
        commit_message: Automatically regenerated against current version
        branch: ${{ github.head_ref }}
        commit_options: '--no-verify --signoff'
        repository: .
    - name: Publish to NPM
      uses: JS-DevTools/npm-publish@v1
      with:
        token: ${{ secrets.NPM_TOKEN }}